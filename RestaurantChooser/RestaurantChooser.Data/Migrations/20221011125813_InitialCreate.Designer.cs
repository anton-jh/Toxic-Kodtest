// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantChooser.Data;

#nullable disable

namespace RestaurantChooser.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221011125813_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("RestaurantChooser.Domain.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("RestaurantChooser.Domain.Entities.Tag", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("RestaurantTag", b =>
                {
                    b.Property<Guid>("RestaurantsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TagsName")
                        .HasColumnType("TEXT");

                    b.HasKey("RestaurantsId", "TagsName");

                    b.HasIndex("TagsName");

                    b.ToTable("RestaurantTag");
                });

            modelBuilder.Entity("RestaurantChooser.Domain.Entities.Restaurant", b =>
                {
                    b.OwnsMany("RestaurantChooser.Domain.ValueObjects.OpeningHoursDay", "OpeningHours", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<TimeOnly>("ClosingTime")
                                .HasColumnType("TEXT");

                            b1.Property<int>("DayOfWeek")
                                .HasColumnType("INTEGER");

                            b1.Property<TimeOnly>("OpeningTime")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("RestaurantId")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("RestaurantId");

                            b1.ToTable("OpeningHoursDay");

                            b1.WithOwner()
                                .HasForeignKey("RestaurantId");
                        });

                    b.Navigation("OpeningHours");
                });

            modelBuilder.Entity("RestaurantTag", b =>
                {
                    b.HasOne("RestaurantChooser.Domain.Entities.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantChooser.Domain.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
